（一）Series是指一维数组，与Numpy中的array相似，这两个也与list相似，不同时的是list可以放入不同数据类型。
1、Series与array只允许存储相同数据结构，Series增加了Label以用于索引。
>>> a=[3,2,6,2]
>>> b=pd.Series(a)
>>> b
0    3
1    2
2    6
3    2

1.1、访问数据
>>> x=pd.Series(['a',2,'测试'],index=[1,2,3])
>>> x
1     a
2     2
3    测试
dtype: object
>>> x[3]
'测试'

2、通过index与values获取Series的索引与数据
>>> b.index
RangeIndex(start=0, stop=4, step=1)
>>> b.values
array([3, 2, 6, 2], dtype=int64)
>>> d=pd.Series(a,index=['g','h','j','k'])

3、Series的计算筛选会保留index。
>>> d
g    3
h    2
j    6
k    2
>>> b[b>2]
0    3
2    6

4、describe()函数的使用。
>>> b.describe()
count    4.000000
mean     3.250000
std      1.892969
min      2.000000
25%      2.000000
50%      2.500000
75%      3.750000
max      6.000000
dtype: float64

5、Series转化为字典。
>>> b.to_dict()
{0: 3, 1: 2, 2: 6, 3: 2}

6、Pandas的读取csv，txt,xlsx等。
a=pd.read_csv()
a.to_excel()
a.describe()会显示全部列的统计信息。
a.info()会显示数据类型，行列数，dataframe占用的内容。
排序：
>>> d
          0         1         2         3
0 -0.349315 -0.673596  0.330073 -0.724296
1  0.845428  0.723808 -0.355345  1.195473
2 -0.425874 -1.309711  0.513649  0.765443
>>> d.sort_values(by=[0,1,2,3])
          0         1         2         3
2 -0.425874 -1.309711  0.513649  0.765443
0 -0.349315 -0.673596  0.330073 -0.724296
1  0.845428  0.723808 -0.355345  1.195473
DataFrame列的交换操作：
先取出要交换的列——从DataFrame删掉原来的列——将取出的列插入需要交换的位置。
sell_record2.columns = ['卖出时间','买入时间','信号种类','买入价格','数量','使用资金','卖价','交易盈亏']
buy_time001 = sell_record2['买入时间']
sell_record2.drop(labels=['买入时间'], axis=1,inplace = True)
sell_record2.insert(0, '买入时间', buy_time001)

